# -*- coding: utf-8 -*-
"""Regulatory Affairs of Road Accident Data 2020 India.

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ol0-xaLSzEkCuNaI-xYV8A2G6Eg2VbjJ

**Step 1**:  Data Preparation
"""

import pandas as pd

#Load the dataset
from google.colab import files
uploaded = files.upload()

df = pd.read_csv('Regulatory Affairs of Road Accident Data 2020 India.csv')
df.head()

# Check for missing values

print(df.isnull().sum())

# Drop rows with missing values

 df = df.dropna()
 print(df.isnull().sum())

df.info()

"""**Step 2**: Exploratory data analysis (EDA)"""

#Distribution of Accidents across the cities

import matplotlib.pyplot as plt
import seaborn as sns

# Count the occurrences of each city
city_counts = df['Million Plus Cities'].value_counts()

plt.figure(figsize=(10, 6))
# Use the city counts as the data for the distribution plot
sns.barplot(x=city_counts.index, y=city_counts.values)
plt.xlabel('City')
plt.ylabel('Number of Accidents')
plt.xticks(rotation=90)

# Rotate x-axis labels for better readability
plt.tight_layout()
plt.show()

"""The bar plot showing the number of accidents in each million-plus city"""

#Analysis of Accident Causes

# Plot the distribution of accidents by cause category

plt.figure(figsize=(10,6))
sns.countplot(y='Cause category', data=df, order=df['Cause category'].value_counts().index)

plt.title('Distribution of Accident Causes')
plt.xlabel('Number of Accidents')
plt.ylabel('Cause Category')
plt.show()

"""Above barplot showing the distribution of accident causes by category."""

# Detailed analysis by cause subcategory
plt.figure(figsize=(10,8))
sns.countplot(y='Cause Subcategory', data=df,
order=df['Cause Subcategory'].value_counts().index)
plt.title('Detailed Analysis of Accident Causes by Subcategory')
plt.xlabel('Number of Accidents')
plt.ylabel('Cause Subcategory')
plt.show()

"""A moredetailed bar plot showing the distribution of accident causes by
subcategory.
"""

#Outcomes of Incidents

plt.figure(figsize=(10,6))
sns.countplot(x='Outcome of Incident', data=df,
              order=df['Outcome of Incident'].value_counts().index)

plt.title('Outcomes of Incidents')
plt.xlabel('Outcome')
plt.ylabel('Number of Incidents')
plt.show()

"""Abarplot showing the distribution of outcomes (e.g., fatal, non-fatal) of road
 accidents

**Step 3**:  Analyzing Accident Causes vs Outcomes
"""

# Grouping by cause category and outcome
outcome_vs_cause = df.groupby(['Cause category',
                               'Outcome of Incident'])['Count'].sum().unstack()

#Plot the result
outcome_vs_cause.plot(kind='bar',stacked=True,figsize=(12,8))
plt.title('Accident Causes vs Outcomes')
plt.xlabel('Cause Category')
plt.ylabel('Number of Incidents')
plt.show()

""" A stacked bar plot showing the relationship between accident causes and their
 outcomes.
"""

